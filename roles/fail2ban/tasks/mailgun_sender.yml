---
- name: Include the Mailgun-Sender vars
  include_vars:
    file: mailgun_sender.yml

- name: Include secret vars
  include_vars: ../../secrets/mailgun/vars.yml

- name: Create Mailgun-Sender install directory
  file:
    path: "{{ mailgun_sender_install_path }}"
    state: directory
    mode: '0755'

- name: Check if Mailgun-Sender binary exists
  stat:
    path: "{{ mailgun_sender_install_path }}/{{ mailgun_sender_binary }}"
  register: mailgun_sender

- name: Get latest binary sha1sum file
  get_url:
    url: "{{ shibatek_release_bucket }}/{{ mailgun_sha1_source }}"
    dest: /tmp/
  when: mailgun_sender.stat.exists

- name: Compare sha1sum of existing binary to latest
  shell:
    cmd: "cd {{ mailgun_sender_install_path }} ; cat /tmp/{{ mailgun_sha1_source }}| sha1sum -c -"
  register: mailgun_sender_sha1
  when: mailgun_sender.stat.exists

- name: Download latest Mailgun-Sender binary
  get_url:
    url: "{{ shibatek_release_bucket }}/{{ mailgun_release_binary }}"
    dest: /tmp/
  when: (not mailgun_sender.stat.exists) or (mailgun_sender_sha1 != 0)

- name: Extract Mailgun-Sender binary
  unarchive:
    src: "/tmp/{{ mailgun_release_binary }}"
    dest: "{{ mailgun_sender_install_path }}"
    remote_src: yes
  when: (not mailgun_sender.stat.exists) or (mailgun_sender_sha1 != 0)

- name: Make Mailgun-Sender executable
  file:
    path: "{{ mailgun_sender_install_path }}/{{ mailgun_sender_binary }}"
    mode: '0755'
  when: (not mailgun_sender.stat.exists) or (mailgun_sender_sha1 != 0)

- name: Copy Mailgun-Sender conf
  template:
    src: mailgun_sender/mailgun_conf.json.j2
    dest: "{{ mailgun_sender_install_path }}/mailgun_conf.json"

- name: Configure Mailgun-Sender fail2ban action
  template:
    src: mailgun_sender/mailgun.conf.j2
    dest: /etc/fail2ban/action.d/mailgun.conf
  notify:
    - Restart fail2ban